_model: guide
---
order: 2
---
title: Router
---
body:


<p>Keechma treats the URL as the single source of the truth. URL&apos;s are expected to contain all the data needed to recreate the application state.</p>
<p>Router in Keechma is implemented in a way that supports that design decision:</p>
<ol>
<li>Routes are just a list of patterns that describe the transformation from URL to the params and from the params to the URL string.</li>
<li>There are no named routes, you give the router a params map and the router returns the URL that is the closest representation of the given data.
<ul>
<li>Params that weren&apos;t matched by the route placeholders will be encoded as the query params.</li>
</ul>
</li>
<li>When the URL is changed the URL will be transformed to the params map (based on the route pattern that is the closest match for a given URL).</li>
</ol>
<p>Unlike the other systems, you don&apos;t associate the action with the route. Each URL change will results with the following:</p>
<ol>
<li>URL will be transformed into the params map</li>
<li>Route params will be sent to the Controller Manager</li>
<li>Controller Manager will start or stop the controllers according to the route params</li>
</ol>
<p>You will never directly interact with the router, it is managed automatically when you start the application.</p>
<p>Keechma&apos;s router has no side - effects (these are set up when the application is started), and has no global shared state. It is implemented in a pure functional way - it only transforms the data between formats.</p>
<p>Read the router <a href="api/keechma.router.html">API docs</a>.</p>
