_model: guide
---
order: 2
---
title: Router
---
body:


<p>Keechma treats the URL as the single source of the truth. URL&apos;s are expected to contain all data needed to recreate the application&apos;s state.</p>
<p>The router in Keechma is implemented in a way that supports that design decision:</p>
<ol>
<li>Routes are just a list of patterns that describe the transformation from URL to params and from params to an URL string.</li>
<li>There are no named routes, you give the router a params map and the router returns the URL that is the closest representation of the given data.
<ul>
<li>Params that weren&apos;t matched by the route placeholders will be encoded as the query params.</li>
</ul>
</li>
<li>When the URL changes, it&apos;s transformed into a params map (based on the route pattern that is the closest match for a given URL).</li>
</ol>
<p>Unlike other systems, you don&apos;t associate an action with a route. Each URL change will result in the following:</p>
<ol>
<li>URL will be transformed into a params map</li>
<li>Route params will be sent to the Controller Manager</li>
<li>The Controller Manager will start or stop controllers according to the route params</li>
</ol>
<p>You will never directly interact with the router, it&apos;s managed automatically when you start the application.</p>
<p>Keechma&apos;s router has no side-effects (these are set up when the application is started) and has no globally shared state. It is implemented in a purely functional way - it only transforms the data between formats.</p>
<p>Here are the router <a href="/api/router/">API docs</a>.</p>
